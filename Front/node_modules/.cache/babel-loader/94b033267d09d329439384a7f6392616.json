{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/Projects/front/library/src/components/Test.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      maxWidth: 600,\n      padding: theme.spacing.unit * 2\n    },\n    image: {\n      width: 128,\n      height: 128\n    },\n    img: {\n      margin: 'auto',\n      display: 'block',\n      maxWidth: '100%',\n      maxHeight: '100%'\n    }\n  };\n};\n\nfunction ComplexGrid(props) {\n  var classes = props.classes;\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ButtonBase, {\n    className: classes.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.img,\n    alt: \"complex\",\n    src: \"/static/images/grid/complex.jpg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Standard license\"), React.createElement(Typography, {\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Full resolution 1920x1080 \\u2022 JPEG\"), React.createElement(Typography, {\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"ID: 1030114\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      cursor: 'pointer'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Remove\"))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"$19.00\")))));\n}\n\nComplexGrid.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ComplexGrid);","map":{"version":3,"sources":["/home/eduardo/Projects/front/library/src/components/Test.js"],"names":["React","PropTypes","withStyles","Grid","Paper","Typography","ButtonBase","styles","theme","root","flexGrow","maxWidth","padding","spacing","unit","image","width","height","img","margin","display","maxHeight","ComplexGrid","props","classes","cursor","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 600,\n    padding: theme.spacing.unit * 2,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n});\n\nfunction ComplexGrid(props) {\n  const { classes } = props;\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={16}>\n        <Grid item>\n          <ButtonBase className={classes.image}>\n            <img className={classes.img} alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n          </ButtonBase>\n        </Grid>\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={16}>\n            <Grid item xs>\n              <Typography gutterBottom variant=\"subtitle1\">\n                Standard license\n              </Typography>\n              <Typography gutterBottom>Full resolution 1920x1080 â€¢ JPEG</Typography>\n              <Typography color=\"textSecondary\">ID: 1030114</Typography>\n            </Grid>\n            <Grid item>\n              <Typography style={{ cursor: 'pointer' }}>Remove</Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"subtitle1\">$19.00</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nComplexGrid.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ComplexGrid);"]},"metadata":{},"sourceType":"module"}